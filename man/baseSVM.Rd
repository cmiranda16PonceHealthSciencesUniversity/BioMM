% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BioMM.R
\name{baseSVM}
\alias{baseSVM}
\title{Prediction by SVM}
\usage{
baseSVM(
  trainData,
  testData,
  predMode = c("classification", "probability", "regression"),
  paramlist = list(tuneP = TRUE, kernel = "radial", gamma = 10^(-3:-1), cost =
    10^(-2:2))
)
}
\arguments{
\item{trainData}{The input training dataset. The first column
is the label or the output. For binary classes, 
0 and 1 are used to indicate the class member.}

\item{testData}{The input test dataset. The first column
is the label or the output. For binary classes, 
0 and 1 are used to indicate the class member.}

\item{predMode}{The prediction mode. Available options are 
c('classification', 'probability', 'regression').}

\item{paramlist}{A set of model parameters defined in an R list object. 
The valid option: list(kernel, gamma, cost, tuneP).  
\enumerate{
  \item 'tuneP':  a logical value indicating if hyperparameter tuning 
                  should be conducted or not. The default is FALSE.
  \item 'kernel': options are c('linear', 'polynomial', 'radial', 
                  'sigmoid'). The defaut is 'radial'.
  \item 'gamma': the parameter needed for all kernels except 'linear'. 
        If tuneP is TRUE, more than one value is suggested.  
  \item 'cost': is the cost of constraints violation.
        If tuneP is TRUE, more than one value is suggested. 
}}
}
\value{
The predicted output for the test data.
}
\description{
Prediction by support vector machine (SVM) with two different settings: 
'classification' and 'regression'.
}
\details{
Hyperparameter tuning is recommended in many biological data 
mining applications. The best parameters can be determined via an internal 
cross validation.
}
\examples{
 
## Load data  
methylfile <- system.file('extdata', 'methylData.rds', package='BioMM')  
methylData <- readRDS(methylfile)  
dataY <- methylData[,1]
## select a subset of genome-wide methylation data at random
methylSub <- data.frame(label=dataY, methylData[,c(2:2001)])  
trainIndex <- sample(nrow(methylSub), 12)
trainData = methylSub[trainIndex,]
testData = methylSub[-trainIndex,]
library(e1071)
predY <- baseSVM(trainData, testData, 
                 predMode='classification', 
                 paramlist=list(tuneP=FALSE, kernel='radial', 
                                gamma=10^(-3:-1), cost=10^(-3:1))) 
testY <- testData[,1]
accuracy <- classifiACC(dataY=testY, predY=predY)
print(accuracy) 
}
\seealso{
\code{\link[e1071]{svm}}
}
\author{
Junfang Chen
}
