% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BioMM.R
\name{predByFS}
\alias{predByFS}
\title{Prediction by supervised machine learning along with feature selection}
\usage{
predByFS(trainData, testData, FSmethod, cutP, fdr, FScore, classifier,
  predMode, paramlist)
}
\arguments{
\item{trainData}{The input training dataset. The first column
is the label or the output. For binary classes, 
0 and 1 are used to indicate the class member.}

\item{testData}{The input test dataset. The first column
is the label or the output. For binary classes, 
0 and 1 are used to indicate the class member.}

\item{FSmethod}{Feature selection methods. Available options are 
c(NULL, 'positive', 'wilcox.test', 'cor.test', 'chisq.test', 'posWilcox', 
or 'top10pCor').}

\item{cutP}{The cutoff used for p value thresholding.
Commonly used cutoffs are c(0.5, 0.1, 0.05, etc.). The default is 0.05.}

\item{fdr}{Multiple testing correction method. Available options are 
c(NULL, 'fdr', 'BH', 'holm', etc.). 
See also \code{\link[stats]{p.adjust}}. The default is NULL.}

\item{FScore}{The number of cores used for feature selection.}

\item{classifier}{Machine learning classifiers. 
Available options are c('randForest', 'SVM', 'glmnet').}

\item{predMode}{The prediction mode. Available options are 
c('probability', 'classification', 'regression').}

\item{paramlist}{A set of model parameters defined in an R list object.}
}
\value{
The predicted output for the test data.
}
\description{
Prediction by supervised machine learning along with feature selection.
}
\details{
If no feature selected or just one selected feature, 
then top 10% outcome-associated features will be selected by default.
}
\examples{
 
## Load data  
methylfile <- system.file('extdata', 'methylData.rds', package='BioMM')  
methylData <- readRDS(methylfile)  
dataY <- methylData[,1]
## select a subset of genome-wide methylation data at random
methylSub <- data.frame(label=dataY, methylData[,c(2:501)])  
trainIndex <- sample(nrow(methylSub), 30)
trainData = methylSub[trainIndex,]
testData = methylSub[-trainIndex,]
library(ranger) 
library(parallel)
param <- 10
predY <- predByFS(trainData, testData, 
                  FSmethod='cor.test', cutP=0.1, 
                  fdr=NULL, FScore=param, 
                  classifier='randForest',
                  predMode='classification', 
                  paramlist=list(ntree=300, nthreads=20))  
testY <- testData[,1]
accuracy <- classifiACC(dataY=testY, predY=predY)
print(accuracy)  
}
\seealso{
\code{\link{getDataByFilter}}
}
\author{
Junfang Chen
}
